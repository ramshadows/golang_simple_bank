// Utils generates random owner names, currency codes and amount of money
// for use when writing tests
package utils

import (
	"fmt"
	"math/rand"
	"strings"
	"time"
)

const alphabet = "abcdefghijklmnopqrstuvwxyz"

func init() {
	// Generates a uniform random value
	rand.Seed(time.Now().UnixNano())
}

// Function RandomInt generate a random integer using between min and max
func RandomInt(min, max int64) int64 {
	// returns a rand interger betwn zero and max - min
	return min + rand.Int63n(max-min+1)

}

// RandomString generates random strings of length n
func RandomString(n int) string {
	var sb strings.Builder

	k := len(alphabet)

	for i := 0; i < n; i++ {
		c := alphabet[rand.Intn(k)]

		// Writes the generated alphabet to the string builder
		sb.WriteByte(c)

	}

	// convert the generated bytes of strings to a string and return it
	return sb.String()

}

// RandomOwner generates a random owner name
func RandomOwner() string {
	return RandomString(6)
}

// RandomMoney generates random amount of money
func RandomMoney() int64 {
	return RandomInt(0, 1000)

}

// RandomCurrency generates random currency codes
func RandomCurrency() string {

	currencies := []string{KES, USD, EUR}

	n := len(currencies)

	// Generates a random index and returns the currency at that index
	// Which is zero and n-1
	return currencies[rand.Intn(n)]

}

// RandomEmail generates a random email address
func RandomEmail() string {
	return fmt.Sprintf("%s@email.com", RandomString(6))
}
